swagger: '2.0'
info:
  version: "1.0.0"
  title: Sympa API
host: "api.sympa.com" # an api for each robot
schemes:
  - "https"
basePath: '/v1'
produces:
  - "application/json"
paths:
  /groups/:
    get:
      description: Gets `Group` objects.
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/Query"
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfGroups
            type: array
            items:
              $ref: "#/definitions/Group"
    post:
      description: Create a `Group` object.
      parameters:
        - name: group
          in: body
          description: the `Group` to create.
          schema:
            $ref: "#/definitions/Group"
      responses:
        201:
          description: a `Group` successfully created.
          schema:
            $ref: "#/definitions/Group"
  /group/:id/:
    get:
      description: Gets `Group` object.
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Group"
        404:
          description: a `Group` is not found
    delete:
      description: Deletes `Group` object.
      responses:
        204:
          description: a `Group` successfully deleted
          schema:
            $ref: "#/definitions/Group"
        404:
          description: a `Group` is not found
    put:
      description: Modify a `Group` object.
      parameters:
        - name: group
          in: body
          description: the `Group` to modify.
          schema:
            $ref: "#/definitions/Group"
      responses:
        200:
          description: a `Group` successfully modified.
          schema:
            $ref: "#/definitions/Group"
  /group/:id/users/:
    get:
      description: |
        Gets `User` objects of a `Group`.
        Use `Query` to request `User` by role.
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/Query"
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfUsers
            type: array
            items:
              $ref: "#/definitions/User"
  /group/:id/threads/:
    get:
      description: Gets `Thread` objects of a `Group`.
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfThreads
            type: array
            items:
              $ref: "#/definitions/Thread"
  /users/:
    get:
      description: Gets `User` objects.
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/Query"
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfUsers
            type: array
            items:
              $ref: "#/definitions/User"
    post:
      description: Create a `User` object.
      parameters:
        - name: user
          in: body
          description: the `User` to create.
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: a `User` successfully created.
          schema:
            $ref: "#/definitions/User"
  /user/:id:
    get:
      description: Gets `User` object.
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"
        404:
          description: a `User` is not found
    delete:
      description: Deletes `User` object.
      responses:
        204:
          description: a `User` successfully deleted
          schema:
            $ref: "#/definitions/User"
        404:
          description: a `User` is not found
    put:
      description: Modify a `User` object.
      parameters:
        - name: user
          in: body
          description: the `User` to modify.
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: a `User` successfully modified.
          schema:
            $ref: "#/definitions/User"
  /user/:id/groups/:
    get:
      description: |
        Gets `Group` objects.
        Use `Query` to request favorites or subscribed groups
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/Query"
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfGroups
            type: array
            items:
              $ref: "#/definitions/Group"
  /threads/:
    get:
      description: Gets `Thread` object.
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfThreads
            type: array
            items:
              $ref: "#/definitions/Thread"
    post:
      description: Create a `Thread` object.
      parameters:
        - name: thread
          in: body
          description: the `Thread` to create.
          schema:
            $ref: "#/definitions/Thread"
      responses:
        201:
          description: a `Thread` successfully created.
          schema:
            $ref: "#/definitions/Thread"
  /thread/:id:
    get:
      description: Gets `Thread` object.
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Thread"
        404:
          description: a `Thread` is not found
    delete:
      description: Deletes `Thread` object.
      responses:
        204:
          description: a `Thread` successfully deleted
          schema:
            $ref: "#/definitions/Thread"
        404:
          description: a `Thread` is not found
    put:
      description: Modify a `Thread` object.
      parameters:
        - name: thread
          in: body
          description: the `Thread` to modify.
          schema:
            $ref: "#/definitions/Thread"
      responses:
        200:
          description: a `Thread` successfully modified.
          schema:
            $ref: "#/definitions/Thread"
  /thread/:id/users/:
    get:
      description: |
        Gets `User` objects of a `Thread`. So you can get contributors
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/Query"
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfUsers
            type: array
            items:
              $ref: "#/definitions/User"
definitions:
  Group:
    required:
      - id
      - self
    properties:
      self: # the unique url of this ressource
        type: string
      id:
        type: integer
      title:
        type: string
      subject:
        type: string
      description:
        type: string
      image:
        type: string
      mail:
        type: string
      tags:
        type: array
        items:
          title: Tag
          type: string
  Thread:
    required:
      - id
      - self
    properties:
      self: # the unique url of this ressource
        type: string
      id:
        type: integer
      subject:
        type: string
      replies:
        type: integer
      activity:
        type: string
      tags:
        type: array
        items:
          title: Tag
          type: string
  User:
    required:
      - id
      - self
    properties:
      self: # the unique url of this ressource
        type: string
      id:
        type: integer
      image:
        type: string
      mail:
        type: string
      last_name:
        type: string
      first_name:
        type: string
      birth_date:
        type: string
      roles:
        type: array
        items:
          title: Role
          type: string
parameters:
  Page:
    name: page
    in: query
    description: Page number (pagination)
    required: false
    type: number
    format: integer
  PageSize:
    name: page_size
    in: query
    description: Page size (pagination)
    required: false
    type: number
    format: integer
  Query:
    name: q
    in: query
    description: Use to ask filters and other
    required: false
    type: number
    format: integer
